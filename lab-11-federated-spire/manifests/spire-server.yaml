# Namespace: Defines the Kubernetes namespace spire where all the SPIRE Server components will be deployed.
apiVersion: v1
kind: Namespace
metadata:
  name: spire
---
# ServiceAccount: Creates a service account named spire-server in the spire namespace, which the SPIRE Server will use to interact with Kubernetes APIs.
apiVersion: v1
kind: ServiceAccount
metadata:
  name: spire-server
  namespace: spire
---
# Role: Defines a role that allows the patching, getting, and listing of configmaps within the spire namespace.
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: spire-server-configmap-role
  namespace: spire
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["patch", "get", "list"]
---
# RoleBinding: Binds the above role to the spire-server service account.
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: spire-server-configmap-role-binding
  namespace: spire
subjects:
  - kind: ServiceAccount
    name: spire-server
    namespace: spire
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: spire-server-configmap-role
---
# ClusterRole: Allows the spire-server to create token reviews (via the Token Review API) for node attestation.
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: spire-server-trust-role
rules:
  - apiGroups: [""]
    resources: ["pods", "nodes"]
    verbs: ["get"]
  - apiGroups: ["authentication.k8s.io"]
    resources: ["tokenreviews"]
    verbs: ["create"]
---
# ClusterRoleBinding: Binds the above cluster role to the spire-server service account.
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: spire-server-trust-role-binding
subjects:
  - kind: ServiceAccount
    name: spire-server
    namespace: spire
roleRef:
  kind: ClusterRole
  name: spire-server-trust-role
  apiGroup: rbac.authorization.k8s.io
---
# StatefulSet: Deploys the SPIRE Server as a statefulset, with a replica count of 1, necessary volume mounts, and readiness and liveness probes.
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: spire-server
  namespace: spire
  labels:
    app: spire-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spire-server
  serviceName: spire-server
  template:
    metadata:
      namespace: spire
      labels:
        app: spire-server
    spec:
      serviceAccountName: spire-server
      containers:
        - name: debug
          image: busybox
          command: ["/bin/sleep", "infinity"]
          volumeMounts:
            - name: spire-data
              mountPath: /run/spire/data
              readOnly: false
        - name: spire-server
          image: ghcr.io/spiffe/spire-server:1.8.0
          args: ["-config", "/run/spire/config/server.conf"]
          ports:
            - containerPort: 8081
            - containerPort: 8443
              hostPort: 8443
          volumeMounts:
            - name: spire-config
              mountPath: /run/spire/config
              readOnly: true
            - name: spire-data
              mountPath: /run/spire/data
              readOnly: false
          livenessProbe:
            httpGet:
              path: /live
              port: 8080
            failureThreshold: 2
            initialDelaySeconds: 15
            periodSeconds: 60
            timeoutSeconds: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
        - name: spire-config
          configMap:
            name: spire-server
  volumeClaimTemplates:
    - metadata:
        name: spire-data
        namespace: spire
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
---
# Service: Exposes the SPIRE Server on a NodePort, enabling communication with SPIRE Agents.
apiVersion: v1
kind: Service
metadata:
  name: spire-server
  namespace: spire
spec:
  type: NodePort
  ports:
    - name: grpc
      port: 8081
      targetPort: 8081
      protocol: TCP
  selector:
    app: spire-server
---
# ConfigMap: Placeholder for the SPIRE bundle, used to distribute the SPIRE root certificate to workloads.
apiVersion: v1
kind: ConfigMap
metadata:
  name: spire-bundle
  namespace: spire
---

